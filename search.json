[{"title":"Hello World","url":"http://atwoodduan.github.io/2016/12/23/hello-world/","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","categories":[],"tags":[]},{"title":"k-近邻算法","url":"http://atwoodduan.github.io/2016/12/22/k-邻近算法/","content":"<p>创建一个测试用的生成数据函数，其中group为数据集，labels为数据集中每个元素所对应的类别。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#-*- coding: UTF-8 -*-</span></div><div class=\"line\"><span class=\"keyword\">from</span> numpy <span class=\"keyword\">import</span> *</div><div class=\"line\"><span class=\"keyword\">import</span> operator </div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">createDataSet</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    group = array([[<span class=\"number\">1.0</span>,<span class=\"number\">1.1</span>],[<span class=\"number\">1.0</span>,<span class=\"number\">1.0</span>],[<span class=\"number\">0</span>,<span class=\"number\">0</span>],[<span class=\"number\">0</span>,<span class=\"number\">0.1</span>]])</div><div class=\"line\">    labels = [<span class=\"string\">'A'</span>,<span class=\"string\">'A'</span>,<span class=\"string\">'B'</span>,<span class=\"string\">'B'</span>]</div><div class=\"line\">    <span class=\"keyword\">return</span> group,labels</div></pre></td></tr></table></figure>\n<h2 id=\"kNN的基本实现代码\"><a href=\"#kNN的基本实现代码\" class=\"headerlink\" title=\"kNN的基本实现代码\"></a>kNN的基本实现代码</h2><p>对未知类别属性的数据集中的每个点依次执行以下操作<br>(1)计算已知类别数据集中的点与当前点之间的距离；<br>(2)按照距离递增次序排序；<br>(3)选取与当前点距离最小的k个点；<br>(4)确定前灸个点所在类别的出现频率；<br>(5)返回前女个点出现频率最高的类别作为当前点的预测分类。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">classify0</span><span class=\"params\">(inX, dataSet, labels, k)</span>:</span></div><div class=\"line\">    <span class=\"comment\">#计算距离</span></div><div class=\"line\">    dataSetSize = dataSet.shape[<span class=\"number\">0</span>]<span class=\"comment\">#它的功能是读取矩阵的长度，比如shape[0]就是读取矩阵第一维度的长度</span></div><div class=\"line\">    diffMat = tile(inX, (dataSetSize,<span class=\"number\">1</span>)) - dataSet<span class=\"comment\">#tile是重复函数，参数是各个维度重复的次数</span></div><div class=\"line\">    sqDiffMat = diffMat**<span class=\"number\">2</span></div><div class=\"line\">    sqDistances = sqDiffMat.sum(axis=<span class=\"number\">1</span>)<span class=\"comment\">#axis=0, 表示列。</span></div><div class=\"line\">    distances = sqDistances**<span class=\"number\">0.5</span></div><div class=\"line\">    <span class=\"comment\">#选择距离最小的k个点</span></div><div class=\"line\">    sortedDistIndicies = distances.argsort()<span class=\"comment\">#返回递增的下标     </span></div><div class=\"line\">    classCount=&#123;&#125;          </div><div class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(k):</div><div class=\"line\">        voteIlabel = labels[sortedDistIndicies[i]]</div><div class=\"line\">        classCount[voteIlabel] = classCount.get(voteIlabel,<span class=\"number\">0</span>) + <span class=\"number\">1</span><span class=\"comment\">#字典取值函数 dict.get(key, default=None)</span></div><div class=\"line\">    <span class=\"comment\">#operator.itemgetter函数获取的不是值，而是定义了一个函数，通过该函数作用到对象上才能获取值</span></div><div class=\"line\">    <span class=\"comment\">#b=operator.itemgetter(1)      //定义函数b，获取对象的第1个域的值</span></div><div class=\"line\">    sortedClassCount = sorted(classCount.iteritems(), key=operator.itemgetter(<span class=\"number\">1</span>), reverse=<span class=\"keyword\">True</span>)</div><div class=\"line\">    <span class=\"keyword\">return</span> sortedClassCount[<span class=\"number\">0</span>][<span class=\"number\">0</span>]</div></pre></td></tr></table></figure>\n<p>使用以上创建的两个函数就可以简单的看到kNN的实现原理了。数据集中只有4个数据，[1.0,1.1],[1.0,1.0],[0,0],[0,0.1]。前两位A类，后两个为B类<br>显然的是，[0.1,0.1]应该为B类，[1.2,1.2]应该为A类</p>\n<p>加一个图</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">group,labels = createDataSet()</div><div class=\"line\">classify0([<span class=\"number\">0</span>,<span class=\"number\">0</span>],group,labels,<span class=\"number\">3</span>)</div></pre></td></tr></table></figure>\n<pre><code>&apos;B&apos;\n</code></pre><h2 id=\"使用k-邻近算法改进约会网站的配对效果\"><a href=\"#使用k-邻近算法改进约会网站的配对效果\" class=\"headerlink\" title=\"使用k-邻近算法改进约会网站的配对效果\"></a>使用k-邻近算法改进约会网站的配对效果</h2><h3 id=\"准备数据：从文本文件中解析数据\"><a href=\"#准备数据：从文本文件中解析数据\" class=\"headerlink\" title=\"准备数据：从文本文件中解析数据\"></a>准备数据：从文本文件中解析数据</h3><p>海伦收集约会数据巳经有了一段时间，她把这些数据存放在文本文件datingTestSet2 中，每个样本数据占据一行，总共有1000行。海伦的样本主要包含以下3种特征：</p>\n<ul>\n<li>每年获得的飞行常客里程数</li>\n<li>玩视频游戏所耗时间百分比</li>\n<li>每周消费的冰淇淋公升数</li>\n</ul>\n<p>另外还有一列是海伦对这些约会对象的分类。将他们分成了三类</p>\n<ul>\n<li>不喜欢的人</li>\n<li>魅力一般的人</li>\n<li>极具魅力的人</li>\n</ul>\n<p>分别用数字1,2,3表示。<br>创建名为file2matrix的函数，以此来处理输人格式问题。该函数的输人为文件名字符串，输出为训练样本矩阵和类标签向量。</p>\n<p><img src=\"http://p1.bpimg.com/567571/ce29e2b9c42cb77a.png\" alt=\"\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">file2matrix</span><span class=\"params\">(filename)</span>:</span></div><div class=\"line\">    fr = open(filename)</div><div class=\"line\">    numberOfLines = len(fr.readlines())         <span class=\"comment\">#get the number of lines in the file</span></div><div class=\"line\">    returnMat = zeros((numberOfLines,<span class=\"number\">3</span>))        <span class=\"comment\">#prepare matrix to return</span></div><div class=\"line\">    classLabelVector = []                       <span class=\"comment\">#prepare labels return   </span></div><div class=\"line\">    fr = open(filename)</div><div class=\"line\">    index = <span class=\"number\">0</span></div><div class=\"line\">    <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> fr.readlines():</div><div class=\"line\">        line = line.strip()<span class=\"comment\">#开头和结尾删除空格</span></div><div class=\"line\">        listFromLine = line.split(<span class=\"string\">'\\t'</span>)</div><div class=\"line\">        returnMat[index,:] = listFromLine[<span class=\"number\">0</span>:<span class=\"number\">3</span>]</div><div class=\"line\">        classLabelVector.append(int(listFromLine[<span class=\"number\">-1</span>]))</div><div class=\"line\">        index += <span class=\"number\">1</span></div><div class=\"line\">    <span class=\"keyword\">return</span> returnMat,classLabelVector</div></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">datingDataMat,datingLabels = file2matrix(<span class=\"string\">'datingTestSet2.txt'</span>)</div><div class=\"line\">datingDataMat</div></pre></td></tr></table></figure>\n<pre><code>array([[  4.09200000e+04,   8.32697600e+00,   9.53952000e-01],\n       [  1.44880000e+04,   7.15346900e+00,   1.67390400e+00],\n       [  2.60520000e+04,   1.44187100e+00,   8.05124000e-01],\n       ..., \n       [  2.65750000e+04,   1.06501020e+01,   8.66627000e-01],\n       [  4.81110000e+04,   9.13452800e+00,   7.28045000e-01],\n       [  4.37570000e+04,   7.88260100e+00,   1.33244600e+00]])\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">datingLabels[<span class=\"number\">0</span>:<span class=\"number\">20</span>]</div></pre></td></tr></table></figure>\n<pre><code>[3, 2, 1, 1, 1, 1, 3, 3, 1, 3, 1, 1, 2, 1, 1, 1, 1, 1, 2, 3]\n</code></pre><h3 id=\"分析数据：使用Matplotlib创建散点图\"><a href=\"#分析数据：使用Matplotlib创建散点图\" class=\"headerlink\" title=\"分析数据：使用Matplotlib创建散点图\"></a>分析数据：使用Matplotlib创建散点图</h3><p><em>想办法加上图注、横纵坐标</em></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> matplotlib</div><div class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</div><div class=\"line\">fig = plt.figure()</div><div class=\"line\">ax = fig.add_subplot(<span class=\"number\">111</span>)</div><div class=\"line\">ax.scatter(datingDataMat[:,<span class=\"number\">1</span>], datingDataMat[:,<span class=\"number\">2</span>],<span class=\"number\">15.0</span>*array(datingLabels), <span class=\"number\">15.0</span>*array(datingLabels))</div><div class=\"line\">plt.show()</div></pre></td></tr></table></figure>\n<pre><code>&lt;matplotlib.collections.PathCollection at 0x7cf1978&gt;\n</code></pre><p><img src=\"output_14_1.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">fig = plt.figure()</div><div class=\"line\">ax = fig.add_subplot(<span class=\"number\">111</span>)</div><div class=\"line\">ax.scatter(datingDataMat[:,<span class=\"number\">0</span>], datingDataMat[:,<span class=\"number\">1</span>],<span class=\"number\">15.0</span>*array(datingLabels), <span class=\"number\">15.0</span>*array(datingLabels))</div><div class=\"line\">plt.show()</div></pre></td></tr></table></figure>\n<pre><code>&lt;matplotlib.collections.PathCollection at 0x7f240b8&gt;\n</code></pre><p><img src=\"output_15_1.png\" alt=\"png\"></p>\n<h3 id=\"准备数据：归一化数据\"><a href=\"#准备数据：归一化数据\" class=\"headerlink\" title=\"准备数据：归一化数据\"></a>准备数据：归一化数据</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">autoNorm</span><span class=\"params\">(dataSet)</span>:</span></div><div class=\"line\">    minVals = dataSet.min(<span class=\"number\">0</span>)<span class=\"comment\">#沿第0维度最小值</span></div><div class=\"line\">    maxVals = dataSet.max(<span class=\"number\">0</span>)<span class=\"comment\">#沿第0维度最大值</span></div><div class=\"line\">    ranges = maxVals - minVals<span class=\"comment\">#值域</span></div><div class=\"line\">    normDataSet = zeros(shape(dataSet))<span class=\"comment\">#创建空间准备填数</span></div><div class=\"line\">    m = dataSet.shape[<span class=\"number\">0</span>]<span class=\"comment\">#第0维度的长度</span></div><div class=\"line\">    normDataSet = dataSet - tile(minVals, (m,<span class=\"number\">1</span>))</div><div class=\"line\">    normDataSet = normDataSet/tile(ranges, (m,<span class=\"number\">1</span>))   <span class=\"comment\">#element wise divide</span></div><div class=\"line\">    <span class=\"keyword\">return</span> normDataSet, ranges, minVals</div></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">normMat, ranges, minVals = autoNorm(datingDataMat)</div><div class=\"line\">normMat</div></pre></td></tr></table></figure>\n<pre><code>array([[ 0.44832535,  0.39805139,  0.56233353],\n       [ 0.15873259,  0.34195467,  0.98724416],\n       [ 0.28542943,  0.06892523,  0.47449629],\n       ..., \n       [ 0.29115949,  0.50910294,  0.51079493],\n       [ 0.52711097,  0.43665451,  0.4290048 ],\n       [ 0.47940793,  0.3768091 ,  0.78571804]])\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ranges</div></pre></td></tr></table></figure>\n<pre><code>array([  9.12730000e+04,   2.09193490e+01,   1.69436100e+00])\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">minVals</div></pre></td></tr></table></figure>\n<pre><code>array([ 0.      ,  0.      ,  0.001156])\n</code></pre><h3 id=\"测试算法：作为完整程序验证分类器\"><a href=\"#测试算法：作为完整程序验证分类器\" class=\"headerlink\" title=\"测试算法：作为完整程序验证分类器\"></a>测试算法：作为完整程序验证分类器</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">datingClassTest</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    hoRatio = <span class=\"number\">0.1</span>      <span class=\"comment\">#hold out 10%</span></div><div class=\"line\">    datingDataMat,datingLabels = file2matrix(<span class=\"string\">'datingTestSet2.txt'</span>)       <span class=\"comment\">#load data setfrom file</span></div><div class=\"line\">    normMat, ranges, minVals = autoNorm(datingDataMat)</div><div class=\"line\">    m = normMat.shape[<span class=\"number\">0</span>]</div><div class=\"line\">    numTestVecs = int(m*hoRatio)</div><div class=\"line\">    errorCount = <span class=\"number\">0.0</span></div><div class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(numTestVecs):</div><div class=\"line\">        classifierResult = classify0(normMat[i,:],normMat[numTestVecs:m,:],datingLabels[numTestVecs:m],<span class=\"number\">10</span>)</div><div class=\"line\">        <span class=\"keyword\">print</span> <span class=\"string\">\"the classifier came back with: %d, the real answer is: %d\"</span> % (classifierResult, datingLabels[i])</div><div class=\"line\">        <span class=\"keyword\">if</span> (classifierResult != datingLabels[i]): errorCount += <span class=\"number\">1.0</span></div><div class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">\"the total error rate is: %f\"</span> % (errorCount/float(numTestVecs))</div><div class=\"line\">    <span class=\"keyword\">print</span> errorCount</div></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">datingClassTest()</div></pre></td></tr></table></figure>\n<pre><code>the classifier came back with: 3, the real answer is: 3\nthe classifier came back with: 2, the real answer is: 2\nthe classifier came back with: 1, the real answer is: 1\nthe classifier came back with: 1, the real answer is: 1\nthe classifier came back with: 1, the real answer is: 1\nthe classifier came back with: 1, the real answer is: 1\nthe classifier came back with: 3, the real answer is: 3\nthe classifier came back with: 3, the real answer is: 3\nthe classifier came back with: 1, the real answer is: 1\n......\nthe total error rate is: 0.040000\n4.0\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">classifyPerson</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    resultList = [<span class=\"string\">'not at all'</span>,<span class=\"string\">'in small doses'</span>,<span class=\"string\">'in large doses'</span>]</div><div class=\"line\">    percentTats = float(raw_input(<span class=\"string\">\"percentage of time spent playing video games?\"</span>))</div><div class=\"line\">    ffMiles = float(raw_input(<span class=\"string\">\"frequent flier miles earned per year?\"</span>))</div><div class=\"line\">    iceCream = float(raw_input(<span class=\"string\">\"liters of ice cream consumed per year?\"</span>))</div><div class=\"line\">    datingDataMat,datingLabels = file2matrix(<span class=\"string\">'datingTestSet2.txt'</span>)</div><div class=\"line\">    normMat, ranges, minVals = autoNorm(datingDataMat)</div><div class=\"line\">    inArr = array([ffMiles, percentTats, iceCream])</div><div class=\"line\">    classifierResult = classify0((inArr - minVals)/ranges, normMat, datingLabels, <span class=\"number\">20</span>)</div><div class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">\"You will probably like this person: \"</span>, resultList[classifierResult - <span class=\"number\">1</span>]</div></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">classifyPerson()</div></pre></td></tr></table></figure>\n<pre><code>percentage of time spent playing video games?10\nfrequent flier miles earned per year?40000\nliters of ice cream consumed per year?1\nYou will probably like this person:  in large doses\n</code></pre><h2 id=\"手写识别系统\"><a href=\"#手写识别系统\" class=\"headerlink\" title=\"手写识别系统\"></a>手写识别系统</h2><h3 id=\"准备数据：将图像转换为测试向量\"><a href=\"#准备数据：将图像转换为测试向量\" class=\"headerlink\" title=\"准备数据：将图像转换为测试向量\"></a>准备数据：将图像转换为测试向量</h3><p>首先编写一段函数img2vector，将图像转换为向量：该函数创建1×1024的二进制数组 ，然后打开给定的文件，循环读出文件的前32行 ，并将每行的头32个字符值存储在Numpy数组中，最后返回数组</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">img2vector</span><span class=\"params\">(filename)</span>:</span></div><div class=\"line\">    returnVect = zeros((<span class=\"number\">1</span>,<span class=\"number\">1024</span>))</div><div class=\"line\">    fr = open(filename)</div><div class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">32</span>):</div><div class=\"line\">        lineStr = fr.readline()</div><div class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">32</span>):</div><div class=\"line\">            returnVect[<span class=\"number\">0</span>,<span class=\"number\">32</span>*i+j] = int(lineStr[j])</div><div class=\"line\">    <span class=\"keyword\">return</span> returnVect</div></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">testVector = img2vector(<span class=\"string\">'testDigits/2_13.txt'</span>)</div><div class=\"line\">testVector[<span class=\"number\">0</span>,<span class=\"number\">31</span>:<span class=\"number\">64</span>]</div></pre></td></tr></table></figure>\n<pre><code>array([ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  1.,  1.,\n        1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n        0.,  0.,  0.,  0.,  0.,  0.,  0.])\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> os</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">handwritingClassTest</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    hwLabels = []</div><div class=\"line\">    trainingFileList = os.listdir(<span class=\"string\">'trainingDigits/'</span>)           <span class=\"comment\">#load the training set</span></div><div class=\"line\">    m = len(trainingFileList)</div><div class=\"line\">    trainingMat = zeros((m,<span class=\"number\">1024</span>))</div><div class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(m):</div><div class=\"line\">        fileNameStr = trainingFileList[i]</div><div class=\"line\">        fileStr = fileNameStr.split(<span class=\"string\">'.'</span>)[<span class=\"number\">0</span>]     <span class=\"comment\">#take off .txt</span></div><div class=\"line\">        classNumStr = int(fileStr.split(<span class=\"string\">'_'</span>)[<span class=\"number\">0</span>])</div><div class=\"line\">        hwLabels.append(classNumStr)</div><div class=\"line\">        trainingMat[i,:] = img2vector(<span class=\"string\">'trainingDigits/%s'</span> % fileNameStr)</div><div class=\"line\">    testFileList = os.listdir(<span class=\"string\">'testDigits'</span>)        <span class=\"comment\">#iterate through the test set</span></div><div class=\"line\">    errorCount = <span class=\"number\">0.0</span></div><div class=\"line\">    mTest = len(testFileList)</div><div class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(mTest):</div><div class=\"line\">        fileNameStr = testFileList[i]</div><div class=\"line\">        fileStr = fileNameStr.split(<span class=\"string\">'.'</span>)[<span class=\"number\">0</span>]     <span class=\"comment\">#take off .txt</span></div><div class=\"line\">        classNumStr = int(fileStr.split(<span class=\"string\">'_'</span>)[<span class=\"number\">0</span>])</div><div class=\"line\">        vectorUnderTest = img2vector(<span class=\"string\">'testDigits/%s'</span> % fileNameStr)</div><div class=\"line\">        classifierResult = classify0(vectorUnderTest, trainingMat, hwLabels, <span class=\"number\">3</span>)</div><div class=\"line\">        <span class=\"keyword\">print</span> <span class=\"string\">\"the classifier came back with: %d, the real answer is: %d\"</span> % (classifierResult, classNumStr)</div><div class=\"line\">        <span class=\"keyword\">if</span> (classifierResult != classNumStr): errorCount += <span class=\"number\">1.0</span></div><div class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">\"\\nthe total number of errors is: %d\"</span> % errorCount</div><div class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">\"\\nthe total error rate is: %f\"</span> % (errorCount/float(mTest))</div></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">handwritingClassTest()</div></pre></td></tr></table></figure>\n<pre><code>the classifier came back with: 0, the real answer is: 0\nthe classifier came back with: 0, the real answer is: 0\nthe classifier came back with: 0, the real answer is: 0\nthe classifier came back with: 0, the real answer is: 0\nthe classifier came back with: 0, the real answer is: 0\nthe classifier came back with: 0, the real answer is: 0\nthe classifier came back with: 0, the real answer is: 0\n\n......\n\nthe classifier came back with: 9, the real answer is: 9\nthe classifier came back with: 9, the real answer is: 9\nthe classifier came back with: 9, the real answer is: 9\nthe classifier came back with: 9, the real answer is: 9\nthe classifier came back with: 9, the real answer is: 9\nthe classifier came back with: 9, the real answer is: 9\nthe classifier came back with: 9, the real answer is: 9\nthe classifier came back with: 9, the real answer is: 9\nthe classifier came back with: 9, the real answer is: 9\nthe classifier came back with: 9, the real answer is: 9\nthe classifier came back with: 9, the real answer is: 9\n\nthe total number of errors is: 11\n\nthe total error rate is: 0.011628\n</code></pre><p><em>配上目录和手写文件的图片</em><br>k-近邻算法的另一个缺陷是它无法给出任何数据的基础结构信息，因此我们也无法知晓平均实例样本和典型实例样本具有什么特征。下一章我们将使用概率测量方法处理分类问题， 该算法可以解决这个问题。</p>\n","categories":["机器学习算法"],"tags":["机器学习算法","Python"]},{"title":"R语言的基本数据类型之二：矩阵和数组、列表、数据框","url":"http://atwoodduan.github.io/2016/09/30/R语言基本数据类型之二：矩阵和数组、列表、数据框/","content":"<h1 id=\"R语言的基本数据类型之二：矩阵和数组、列表、数据框\"><a href=\"#R语言的基本数据类型之二：矩阵和数组、列表、数据框\" class=\"headerlink\" title=\"R语言的基本数据类型之二：矩阵和数组、列表、数据框\"></a>R语言的基本数据类型之二：矩阵和数组、列表、数据框</h1><h2 id=\"矩阵和数组\"><a href=\"#矩阵和数组\" class=\"headerlink\" title=\"矩阵和数组\"></a>矩阵和数组</h2><ul>\n<li><p>“&amp;”和“&amp;&amp;”。前者是向量逻辑“与”运算，后者是用于if语句的标量逻辑“与”运算。</p>\n</li>\n<li><p>使用drop可以防止意外降级。</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; z &lt;- matrix(<span class=\"number\">1</span>:<span class=\"number\">10</span>, <span class=\"number\">5</span>, <span class=\"number\">2</span>)</div><div class=\"line\">&gt; z</div><div class=\"line\">     [,<span class=\"number\">1</span>] [,<span class=\"number\">2</span>]</div><div class=\"line\">[<span class=\"number\">1</span>,]    <span class=\"number\">1</span>    <span class=\"number\">6</span></div><div class=\"line\">[<span class=\"number\">2</span>,]    <span class=\"number\">2</span>    <span class=\"number\">7</span></div><div class=\"line\">[<span class=\"number\">3</span>,]    <span class=\"number\">3</span>    <span class=\"number\">8</span></div><div class=\"line\">[<span class=\"number\">4</span>,]    <span class=\"number\">4</span>    <span class=\"number\">9</span></div><div class=\"line\">[<span class=\"number\">5</span>,]    <span class=\"number\">5</span>   <span class=\"number\">10</span></div><div class=\"line\">&gt; r &lt;- z[<span class=\"number\">2</span>,]</div><div class=\"line\">&gt; r &lt;- z[<span class=\"number\">2</span>,,drop = <span class=\"literal\">F</span>]</div><div class=\"line\">&gt; r</div><div class=\"line\">     [,<span class=\"number\">1</span>] [,<span class=\"number\">2</span>]</div><div class=\"line\">[<span class=\"number\">1</span>,]    <span class=\"number\">2</span>    <span class=\"number\">7</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>矩阵是2二维的数组。数组是有维度的向量。</p>\n</li>\n</ul>\n<ul>\n<li><p>apply()函数。apply(m,dimcode,f,fargs)<br>m，是一个矩阵。dimcode，是维度编号，若取值为1代表对每一行应用函数，若取值为2代表对每一列应用函数。f，是应用在行或列上的函数。fargs，是f的可选参数集。<br>apply()函数的默认方式。如果所调用的函数返回的是一个包含k个元素的向量，那apply()的结果就有k行。</p>\n</li>\n<li><p>向量不能更改，只能通过重新赋值来达到增加元素的目的。矩阵和数组也是如此。</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">x[<span class=\"number\">2</span>]&lt;-<span class=\"number\">12</span> <span class=\"comment\">#这样的操作也是一个重新赋值x的过程</span></div><div class=\"line\">cbind(c(<span class=\"number\">1</span>:<span class=\"number\">100</span>),c(<span class=\"number\">1</span>:<span class=\"number\">100</span>))</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>因此在循环中每次往矩阵中添加一行（列），最后矩阵会变成一个大矩阵，这种做法是<br>不可取的，最好一开始就定义好一个大矩阵。这个事先定义的矩阵是空的，但是在循环过程<br>中逐行或列进行赋值，这种做法避免了循环过程中每次进行耗时的矩阵内存分配。</p>\n<h2 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h2><ul>\n<li><p>从技术上讲，列表就是元素是向量或者列表的有序表。之前我们接触过的普通向量的元素都为单一基本元素：数值（numeric）、字符（character）、逻辑值（logical）、复数型（complex）。而列表的元素是不同的向量。</p>\n</li>\n<li><p>使用List()创建列表。</p>\n</li>\n<li><p>单中括号返回一个子列表，双中括号提取列表一个组件，返回值是组件本身的类型。</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; l &lt;- list(name=<span class=\"string\">\"Joe\"</span>, salary=<span class=\"number\">55000</span>, union=<span class=\"literal\">T</span>)</div><div class=\"line\">&gt; l</div><div class=\"line\">$name</div><div class=\"line\">[<span class=\"number\">1</span>] <span class=\"string\">\"Joe\"</span></div><div class=\"line\"></div><div class=\"line\">$salary</div><div class=\"line\">[<span class=\"number\">1</span>] <span class=\"number\">55000</span></div><div class=\"line\"></div><div class=\"line\">$union</div><div class=\"line\">[<span class=\"number\">1</span>] <span class=\"literal\">TRUE</span></div><div class=\"line\"></div><div class=\"line\">&gt; l[<span class=\"number\">1</span>]</div><div class=\"line\">$name</div><div class=\"line\">[<span class=\"number\">1</span>] <span class=\"string\">\"Joe\"</span></div><div class=\"line\"></div><div class=\"line\">&gt; <span class=\"number\">1</span>[[<span class=\"number\">1</span>]]</div><div class=\"line\">[<span class=\"number\">1</span>] <span class=\"number\">1</span></div><div class=\"line\">&gt; a &lt;- l[<span class=\"number\">1</span>]</div><div class=\"line\">&gt; class(a)</div><div class=\"line\">[<span class=\"number\">1</span>] <span class=\"string\">\"list\"</span></div><div class=\"line\">&gt; mode(a)</div><div class=\"line\">[<span class=\"number\">1</span>] <span class=\"string\">\"list\"</span></div><div class=\"line\">&gt; b &lt;- l[[<span class=\"number\">2</span>]]</div><div class=\"line\">&gt; class(b)</div><div class=\"line\">[<span class=\"number\">1</span>] <span class=\"string\">\"numeric\"</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>列表可以添加组件。</p>\n</li>\n<li><p>lapply对列表的每个组件执行某一个函数。并返回另一列表。</p>\n</li>\n<li><p>列表的组件也可以是列表<br>  举一个更复杂的例子</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; l &lt;- list(name=<span class=\"string\">\"Joe\"</span>, salary=<span class=\"number\">55000</span>, union=<span class=\"literal\">T</span>)</div><div class=\"line\">&gt; m &lt;- list(name=<span class=\"string\">\"Jack\"</span>, salary=<span class=\"number\">3300</span>, union=<span class=\"literal\">F</span>)</div><div class=\"line\">&gt; ml &lt;- list(l=l, m=m)</div><div class=\"line\">&gt; ml</div><div class=\"line\">$l</div><div class=\"line\">$l$name</div><div class=\"line\">[<span class=\"number\">1</span>] <span class=\"string\">\"Joe\"</span></div><div class=\"line\"></div><div class=\"line\">$l$salary</div><div class=\"line\">[<span class=\"number\">1</span>] <span class=\"number\">55000</span></div><div class=\"line\"></div><div class=\"line\">$l$union</div><div class=\"line\">[<span class=\"number\">1</span>] <span class=\"literal\">TRUE</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">$m</div><div class=\"line\">$m$name</div><div class=\"line\">[<span class=\"number\">1</span>] <span class=\"string\">\"Jack\"</span></div><div class=\"line\"></div><div class=\"line\">$m$salary</div><div class=\"line\">[<span class=\"number\">1</span>] <span class=\"number\">3300</span></div><div class=\"line\"></div><div class=\"line\">$m$union</div><div class=\"line\">[<span class=\"number\">1</span>] <span class=\"literal\">FALSE</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"数据框\"><a href=\"#数据框\" class=\"headerlink\" title=\"数据框\"></a>数据框</h2><ul>\n<li>使用data.frame()创建数据框。  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; kids &lt;- c(<span class=\"string\">\"Jack\"</span>, <span class=\"string\">\"Jill\"</span>)</div><div class=\"line\">&gt; ages &lt;- c(<span class=\"number\">12</span>, <span class=\"number\">10</span>)</div><div class=\"line\">&gt; d &lt;- data.frame(kids, ages)</div><div class=\"line\">&gt; d</div><div class=\"line\">  kids ages</div><div class=\"line\"><span class=\"number\">1</span> Jack   <span class=\"number\">12</span></div><div class=\"line\"><span class=\"number\">2</span> Jill   <span class=\"number\">10</span></div><div class=\"line\">&gt; d$kids</div><div class=\"line\">[<span class=\"number\">1</span>] Jack Jill</div><div class=\"line\">Levels: Jack Jill</div><div class=\"line\">&gt; mode(d$kids)</div><div class=\"line\">[<span class=\"number\">1</span>] <span class=\"string\">\"numeric\"</span></div><div class=\"line\"></div><div class=\"line\">&gt; d &lt;- data.frame(kids, ages, stringsAsFactors = <span class=\"literal\">F</span>)</div><div class=\"line\">&gt; d$kids</div><div class=\"line\">[<span class=\"number\">1</span>] <span class=\"string\">\"Jack\"</span> <span class=\"string\">\"Jill\"</span></div><div class=\"line\">&gt; mode(d$kids)</div><div class=\"line\">[<span class=\"number\">1</span>] <span class=\"string\">\"character\"</span></div></pre></td></tr></table></figure></li>\n</ul>\n","categories":["R语言学习笔记"],"tags":["R"]},{"title":"R语言的基本数据类型之一：向量","url":"http://atwoodduan.github.io/2016/09/29/R语言基本数据类型之一：向量/","content":"<h1 id=\"R的基本数据类型之一：向量\"><a href=\"#R的基本数据类型之一：向量\" class=\"headerlink\" title=\"R的基本数据类型之一：向量\"></a>R的基本数据类型之一：向量</h1><p>R语言是我最开始接触的一门数据科学相关的语言。以下的一些内容是我阅读《R语言实战》记录的一些笔记。</p>\n<h2 id=\"向量\"><a href=\"#向量\" class=\"headerlink\" title=\"向量\"></a>向量</h2><ol>\n<li><p>向量构成的基本元素为：数值（numeric）、字符（character）、逻辑值（logical）、复数型（complex）。</p>\n</li>\n<li><p>向量不需要定义类型，可直接赋值。</p>\n <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; a&lt;-c(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,-<span class=\"number\">3</span>,-<span class=\"number\">4</span>);a <span class=\"comment\">#数值型向量</span></div><div class=\"line\">[<span class=\"number\">1</span>]  <span class=\"number\">1</span>  <span class=\"number\">2</span>  <span class=\"number\">3</span>  <span class=\"number\">4</span>  <span class=\"number\">5</span> -<span class=\"number\">3</span> -<span class=\"number\">4</span></div><div class=\"line\">&gt; b&lt;-c(<span class=\"string\">\"one\"</span>,<span class=\"string\">\"two\"</span>,<span class=\"string\">\"three\"</span>);b <span class=\"comment\">#字符型向量</span></div><div class=\"line\">[<span class=\"number\">1</span>] <span class=\"string\">\"one\"</span>   <span class=\"string\">\"two\"</span>   <span class=\"string\">\"three\"</span></div><div class=\"line\">&gt; c&lt;-c(<span class=\"literal\">TRUE</span>,<span class=\"literal\">TRUE</span>,<span class=\"literal\">TRUE</span>,<span class=\"literal\">FALSE</span>);c <span class=\"comment\">#逻辑型向量</span></div><div class=\"line\">[<span class=\"number\">1</span>]  <span class=\"literal\">TRUE</span>  <span class=\"literal\">TRUE</span>  <span class=\"literal\">TRUE</span> <span class=\"literal\">FALSE</span></div><div class=\"line\">&gt; x&lt;-c(<span class=\"number\">5</span>,<span class=\"number\">4</span>,<span class=\"number\">2</span>);x</div><div class=\"line\">[<span class=\"number\">1</span>] <span class=\"number\">5</span> <span class=\"number\">4</span> <span class=\"number\">2</span></div><div class=\"line\">&gt; x[<span class=\"number\">9</span>]&lt;-<span class=\"number\">9</span>;x <span class=\"comment\"># 当向量x不够长时，指定第9个元素为9</span></div><div class=\"line\">[<span class=\"number\">1</span>]  <span class=\"number\">5</span>  <span class=\"number\">4</span>  <span class=\"number\">2</span> <span class=\"literal\">NA</span> <span class=\"literal\">NA</span> <span class=\"literal\">NA</span> <span class=\"literal\">NA</span> <span class=\"literal\">NA</span>  <span class=\"number\">9</span><span class=\"comment\">#自动将中间的元素补为NA</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>向量的元素下标取值是以1开始，例如：要前例中取x向量中值为1,则为x[2]。如果一个向量中有一个字符，则该向量的类型会变成字符。</p>\n</li>\n<li><p>给向量的维度加名字使用name()函数。R语言有一个特点一些取属性的函数不仅可以将属性取出来并返回，而且可以通过它将属性赋值。</p>\n <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">names(years)&lt;-c(<span class=\"string\">\"Kennedy\"</span>, <span class=\"string\">\"Johnson\"</span>, <span class=\"string\">\"Carter\"</span>,<span class=\"string\">\"Clinton\"</span>);years</div><div class=\"line\">Kennedy  Johnson  Carter  Clinton</div><div class=\"line\"><span class=\"number\">1960</span>     <span class=\"number\">1964</span>     <span class=\"number\">1976</span>   <span class=\"number\">1994</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>向量元素的添加及合并。</p>\n <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">v&lt;-c(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>)</div><div class=\"line\">v&lt;-c(v,<span class=\"number\">55</span>) <span class=\"comment\">#格式为新向量&lt;-(原向量，新元素)</span></div><div class=\"line\">v</div><div class=\"line\">[<span class=\"number\">1</span>] <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">55</span></div><div class=\"line\">v1 &lt;- c(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>)</div><div class=\"line\">v2 &lt;- c(<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>)</div><div class=\"line\">c(v1,v2)</div><div class=\"line\">[<span class=\"number\">1</span>] <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">4</span> <span class=\"number\">5</span> <span class=\"number\">6</span></div><div class=\"line\">&gt;v&lt;-c(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">3</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>)</div><div class=\"line\">&gt; append(v,<span class=\"number\">10</span>,after=<span class=\"number\">3</span>) <span class=\"comment\">#在第3个向量后面加入10</span></div><div class=\"line\">[<span class=\"number\">1</span>] <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">10</span> <span class=\"number\">3</span> <span class=\"number\">3</span> <span class=\"number\">4</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>如果逻辑变量与数值在一起，则为转换成数值。TRUE转变成1、FALSE转变成0。</p>\n <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">demo_2&lt;-c(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"literal\">TRUE</span>)</div><div class=\"line\">mode(demo_2)[<span class=\"number\">1</span>] <span class=\"string\">\"numeric\"</span></div><div class=\"line\">demo_2[<span class=\"number\">1</span>] <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">1</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>在R语言中没有单一的整数、单一字符的概念例如：X&lt;-2；X&lt;-‘a’；R都是当作向量来处理，只是这个向量只包括单一值。</p>\n</li>\n<li><p>几种特殊向量的生成。</p>\n <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">\tseq(length=<span class=\"number\">10</span>,from=<span class=\"number\">10</span>,to=<span class=\"number\">100</span>)</div><div class=\"line\">[<span class=\"number\">1</span>]  <span class=\"number\">10</span>  <span class=\"number\">20</span>  <span class=\"number\">30</span>  <span class=\"number\">40</span>  <span class=\"number\">50</span>  <span class=\"number\">60</span>  <span class=\"number\">70</span>  <span class=\"number\">80</span>  <span class=\"number\">90</span> <span class=\"number\">100</span></div><div class=\"line\">seq(<span class=\"number\">10</span>,<span class=\"number\">100</span>,<span class=\"number\">10</span>)</div><div class=\"line\">[<span class=\"number\">1</span>]  <span class=\"number\">10</span>  <span class=\"number\">20</span>  <span class=\"number\">30</span>  <span class=\"number\">40</span>  <span class=\"number\">50</span>  <span class=\"number\">60</span>  <span class=\"number\">70</span>  <span class=\"number\">80</span>  <span class=\"number\">90</span> <span class=\"number\">100</span></div><div class=\"line\">rep(P，N) 重复生成P值N次</div><div class=\"line\">rep(<span class=\"number\">1</span>,<span class=\"number\">10</span>) [<span class=\"number\">1</span>] <span class=\"number\">1</span> <span class=\"number\">1</span> <span class=\"number\">1</span> <span class=\"number\">1</span> <span class=\"number\">1</span> <span class=\"number\">1</span> <span class=\"number\">1</span> <span class=\"number\">1</span> <span class=\"number\">1</span> <span class=\"number\">1</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>几种特殊向量的生成。<br> 取子向量：通过下标实现<br> 取某个元素：x[2];(如果X包括名称，注意:x[2]与x[[2]]的区别；<br> 取某中几个：x[c(1,2,0)]<br> 取某个/几个元素，利用-：x[-n]</p>\n</li>\n<li><p>向量排序<br>sort(); 输出排序后的结果；<br>order()；输出排序后的各个向量位置。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">\ta&lt;-c(<span class=\"number\">3</span>,<span class=\"number\">9</span>,<span class=\"number\">0</span>,<span class=\"number\">12</span>,<span class=\"number\">19</span>)</div><div class=\"line\">sort(a)；order(a);</div><div class=\"line\">a&lt;-c(<span class=\"number\">3</span>,<span class=\"number\">9</span>,<span class=\"number\">0</span>,<span class=\"number\">12</span>,<span class=\"number\">19</span>)</div><div class=\"line\">order(a)[<span class=\"number\">1</span>] <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">4</span> <span class=\"number\">5</span></div><div class=\"line\">sort(a)[<span class=\"number\">1</span>]  <span class=\"number\">0</span>  <span class=\"number\">3</span>  <span class=\"number\">9</span> <span class=\"number\">12</span> <span class=\"number\">19</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>相加。如果两个向量进行运算过程中，且两个向量不相同，则R对长度小的向量自动补充值，直到长度等于大的向量。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">\tDemo_5&lt;-<span class=\"number\">1</span>:<span class=\"number\">3</span></div><div class=\"line\">Demo_6&lt;-<span class=\"number\">2</span>:<span class=\"number\">5</span></div><div class=\"line\">Demo_6+ Demo_5</div><div class=\"line\">[<span class=\"number\">1</span>] <span class=\"number\">3</span> <span class=\"number\">5</span> <span class=\"number\">7</span> <span class=\"number\">6</span></div><div class=\"line\">Demo_5&lt;-<span class=\"number\">1</span>:<span class=\"number\">3</span></div><div class=\"line\">Demo_6&lt;-<span class=\"number\">2</span>:<span class=\"number\">7</span></div><div class=\"line\">Demo_7= Demo_6+ Demo_5</div><div class=\"line\">Demo_7[<span class=\"number\">1</span>]  <span class=\"number\">3</span>  <span class=\"number\">5</span>  <span class=\"number\">7</span>  <span class=\"number\">6</span>  <span class=\"number\">8</span> <span class=\"number\">10</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>筛选。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">\t&gt; x&lt;-c(<span class=\"number\">10</span>:<span class=\"number\">1</span>);x</div><div class=\"line\">[<span class=\"number\">1</span>] <span class=\"number\">10</span>  <span class=\"number\">9</span>  <span class=\"number\">8</span>  <span class=\"number\">7</span>  <span class=\"number\">6</span>  <span class=\"number\">5</span>  <span class=\"number\">4</span>  <span class=\"number\">3</span>  <span class=\"number\">2</span>  <span class=\"number\">1</span></div><div class=\"line\">&gt; x[x==<span class=\"number\">3</span>]&lt;-<span class=\"number\">25</span>;x <span class=\"comment\">#将x中等于3的元素变为25</span></div><div class=\"line\">[<span class=\"number\">1</span>] <span class=\"number\">10</span>  <span class=\"number\">9</span>  <span class=\"number\">8</span>  <span class=\"number\">7</span>  <span class=\"number\">6</span>  <span class=\"number\">5</span>  <span class=\"number\">4</span> <span class=\"number\">25</span>  <span class=\"number\">2</span>  <span class=\"number\">1</span></div><div class=\"line\">&gt; x[x=<span class=\"number\">1</span>]&lt;-<span class=\"number\">12</span>;x <span class=\"comment\">#将x的第1个元素数值变为12</span></div><div class=\"line\">[<span class=\"number\">1</span>] <span class=\"number\">12</span>  <span class=\"number\">9</span>  <span class=\"number\">8</span>  <span class=\"number\">7</span>  <span class=\"number\">6</span>  <span class=\"number\">5</span>  <span class=\"number\">4</span> <span class=\"number\">25</span>  <span class=\"number\">2</span>  <span class=\"number\">1</span></div><div class=\"line\">&gt; letters[<span class=\"number\">1</span>:<span class=\"number\">30</span>] <span class=\"comment\"># 产生字母序列</span></div><div class=\"line\">[<span class=\"number\">1</span>] <span class=\"string\">\"a\"</span> <span class=\"string\">\"b\"</span> <span class=\"string\">\"c\"</span> <span class=\"string\">\"d\"</span> <span class=\"string\">\"e\"</span> <span class=\"string\">\"f\"</span> <span class=\"string\">\"g\"</span> <span class=\"string\">\"h\"</span> <span class=\"string\">\"i\"</span> <span class=\"string\">\"j\"</span> <span class=\"string\">\"k\"</span> <span class=\"string\">\"l\"</span> <span class=\"string\">\"m\"</span> <span class=\"string\">\"n\"</span> <span class=\"string\">\"o\"</span> <span class=\"string\">\"p\"</span> <span class=\"string\">\"q\"</span> <span class=\"string\">\"r\"</span> <span class=\"string\">\"s\"</span> <span class=\"string\">\"t\"</span> <span class=\"string\">\"u\"</span> <span class=\"string\">\"v\"</span> <span class=\"string\">\"w\"</span> <span class=\"string\">\"x\"</span> <span class=\"string\">\"y\"</span> <span class=\"string\">\"z\"</span> <span class=\"literal\">NA</span></div><div class=\"line\">[<span class=\"number\">28</span>] <span class=\"literal\">NA</span>  <span class=\"literal\">NA</span>  <span class=\"literal\">NA</span></div><div class=\"line\">&gt; a &lt;- c(<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">2</span>,<span class=\"number\">5</span>,<span class=\"number\">1</span>,<span class=\"number\">6</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">5</span>,<span class=\"number\">8</span>,<span class=\"number\">5</span>,<span class=\"number\">7</span>,<span class=\"number\">3</span>);a</div><div class=\"line\">[<span class=\"number\">1</span>] <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">4</span> <span class=\"number\">2</span> <span class=\"number\">5</span> <span class=\"number\">1</span> <span class=\"number\">6</span> <span class=\"number\">3</span> <span class=\"number\">2</span> <span class=\"number\">5</span> <span class=\"number\">8</span> <span class=\"number\">5</span> <span class=\"number\">7</span> <span class=\"number\">3</span></div><div class=\"line\">&gt; which.max(a) <span class=\"comment\"># 找出最大元素的下标</span></div><div class=\"line\">[<span class=\"number\">1</span>] <span class=\"number\">11</span></div><div class=\"line\">&gt; which.min(a) <span class=\"comment\"># 找出大小的元素下标</span></div><div class=\"line\">[<span class=\"number\">1</span>] <span class=\"number\">6</span></div><div class=\"line\">&gt; a[which.max(a)] <span class=\"comment\"># 找出最大的元素</span></div><div class=\"line\">[<span class=\"number\">1</span>] <span class=\"number\">8</span></div><div class=\"line\">&gt; which(a==<span class=\"number\">2</span>) <span class=\"comment\"># 等于2的元素的下标</span></div><div class=\"line\">[<span class=\"number\">1</span>] <span class=\"number\">1</span> <span class=\"number\">4</span> <span class=\"number\">9</span></div><div class=\"line\">&gt; a[which(a==<span class=\"number\">2</span>)] <span class=\"comment\"># 等于2的元素</span></div><div class=\"line\">[<span class=\"number\">1</span>] <span class=\"number\">2</span> <span class=\"number\">2</span> <span class=\"number\">2</span></div><div class=\"line\">&gt; which(a&gt;<span class=\"number\">5</span>) <span class=\"comment\"># 大于5的元素的下标</span></div><div class=\"line\">[<span class=\"number\">1</span>]  <span class=\"number\">7</span> <span class=\"number\">11</span> <span class=\"number\">13</span></div><div class=\"line\">&gt; a[which(a&gt;<span class=\"number\">5</span>)] <span class=\"comment\"># 大于5的元素</span></div><div class=\"line\">[<span class=\"number\">1</span>] <span class=\"number\">6</span> <span class=\"number\">8</span> <span class=\"number\">7</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>subset() 筛选。相比于普通筛选，结果移除NA值。<br>which() 找到满足条件元素所在的位置。<br>ifelse(b, u, v)其中 b 是一个布尔值向量，而u和v是向量。如果b[i]为真，则返回值的第i个元素为u[i]，如果b[i]为假，则返回值的第i个元素为v[i]。</p>\n","categories":["R语言学习笔记"],"tags":["R"]},{"title":"link","url":"http://atwoodduan.github.io/link/index.html","content":"","categories":[],"tags":[]},{"title":"about","url":"http://atwoodduan.github.io/about/index.html","content":"","categories":[],"tags":[]},{"title":"search","url":"http://atwoodduan.github.io/search/index.html","content":"","categories":[],"tags":[]},{"title":"tag","url":"http://atwoodduan.github.io/tag/index.html","content":"","categories":[],"tags":[]},{"title":"category","url":"http://atwoodduan.github.io/category/index.html","content":"","categories":[],"tags":[]}]